
	/* 월단위 직전 6개월 간
	 * 고객의 순 주문 건수와 순 주문 금액을
	 * 집계한 마트 생성 */

	/* Base Query를 작성 */

	-- BASE QUERY (2017년 6월을 기준으로 직전 6개월 동안 거래내역 집계)
	CREATE TABLE CUSTOMER_GRD_HIS AS (
	WITH TBL AS (
	SELECT	'2017-06'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2017-07-01'								-- FILTER
	AND		T.TRAN_DATE >= DATE '2017-07-01' - INTERVAL '6 MONTH'		-- FILTER
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;
	
	/* BASE QUERY 실행 후 생성된 테이블을 조회함 */
	SELECT	*
	FROM	CUSTOMER_GRD_HIS
	;
		
	/* 생성된 CUSTOMER_GRD_HIS 테이블에 데이터를 추가하는 쿼리 */

	-- INSERT TBL	(2017년 07월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2017-07'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2017-08-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2017-08-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	/* BASE QUERY 실행 후 생성된 테이블과 INSERT QUERY가 반영된 테이블을 조회함 */
	SELECT	*
	FROM	CUSTOMER_GRD_HIS
	ORDER BY
			2, 1
	;

	/* 위 쿼리의 FILTER 부분을 수정하여 필요한 기간의 데이터를 집계하여 추가할 수 있음
	 * 실습의 편의를 위해 각 월별 INSERT 쿼리를 아래에 모두 작성함
	 * 해당 쿼리를 모두 실행하면 예제 데이터 기간의 모든 기준월 데이터를 생성할 수 있음
	 */

	-- 2017년 

	-- INSERT TBL	(2017년 08월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2017-08'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2017-09-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2017-09-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2017년 09월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2017-09'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2017-10-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2017-10-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2017년 10월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2017-10'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2017-11-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2017-11-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	

	-- INSERT TBL	(2017년 11월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2017-11'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2017-12-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2017-12-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	-- INSERT TBL	(2017년 12월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2017-12'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-01-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-01-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	-- 2018년

	-- INSERT TBL	(2018년 01월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-01'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-02-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-02-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	-- INSERT TBL	(2018년 02월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-02'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-03-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-03-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	-- INSERT TBL	(2018년 03월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-03'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-04-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-04-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	-- INSERT TBL	(2018년 04월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-04'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-05-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-05-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2018년 05월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-05'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-06-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-06-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2018년 06월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-06'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-07-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-07-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2018년 07월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-07'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-08-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-08-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2018년 08월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-08'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-09-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-09-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2018년 09월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-09'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-10-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-10-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2018년 10월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-10'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-11-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-11-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2018년 11월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-11'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2018-12-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2018-12-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2018년 12월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2018-12'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-01-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-01-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- 2019년

	-- INSERT TBL	(2019년 01월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-01'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-02-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-02-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	-- INSERT TBL	(2019년 02월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-02'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-03-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-03-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	-- INSERT TBL	(2019년 03월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-03'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-04-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-04-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	

	-- INSERT TBL	(2019년 04월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-04'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-05-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-05-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2019년 05월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-05'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-06-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-06-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2019년 06월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-06'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-07-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-07-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2019년 07월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-07'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-08-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-08-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2019년 08월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-08'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-09-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-09-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2019년 09월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-09'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-10-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-10-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2019년 10월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-10'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-11-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-11-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2019년 11월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-11'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2019-12-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2019-12-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- INSERT TBL	(2019년 12월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2019-12'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2020-01-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2020-01-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	
	
	-- 2020년 

	-- INSERT TBL	(2020년 01월 기준)
	INSERT INTO CUSTOMER_GRD_HIS(
	WITH TBL AS (
	SELECT	'2020-01'							AS STD_YM				-- 매월 바뀌는 영역(기준월)
		,	T.CUSTOMER_ID
		,	COUNT(DISTINCT T.TRANSACTION_ID)	AS CNT_ORDER
		,	SUM(T.TOTAL_AMT)					AS SUM_AMT
	FROM	TRANSACTIONS AS T
	WHERE	T.TRANSACTION_ID NOT IN (
										SELECT	TRANSACTION_ID
										FROM	TRANSACTIONS
										WHERE	QTY < 0
												)
	AND		T.TRAN_DATE < DATE '2020-02-01'								-- FILTER (STD_YM + 1개월)
	AND		T.TRAN_DATE >= DATE '2020-02-01' - INTERVAL '6 MONTH'		-- FILTER (STD_YM + 1개월)
	GROUP BY	1, 2
				)
	SELECT	A.STD_YM
		,	A.CUSTOMER_ID
		,	A.CNT_ORDER
		,	A.SUM_AMT
	FROM	TBL AS A
		)
	;	